"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 保存注册了的服务。供ServicesManager使用
 *
 * @class RegisteredService
 */
class RegisteredService {
    constructor(service, manager) {
        this._isStarted = false;
        this.service = service;
        this.name = service.name;
        this.service._servicesManager = manager;
        //创建服务运行时错误监听器
        this.errorListener = async (err) => {
            const value = await this.service.onError(err);
            switch (value) {
                case false:
                    manager.onError(err, this.service);
                    break;
                case true:
                    break;
                case 'stop':
                    manager.onError(err, this.service);
                    manager.stop(2);
                    break;
                default:
                    if (value instanceof Error)
                        manager.onError(value, this.service);
                    break;
            }
        };
    }
    /**
     * 服务是否已启动
     *
     * @type {boolean}
     */
    get isStarted() {
        return this._isStarted;
    }
    set isStarted(v) {
        // 根据是否启动，注册和移除监听器
        if (v && this._isStarted === false) {
            this.service.on('error', this.errorListener);
        }
        if (v === false && this._isStarted) {
            this.service.removeListener('error', this.errorListener);
        }
        this._isStarted = v;
    }
}
exports.RegisteredService = RegisteredService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcnZpY2VzTWFuYWdlci9SZWdpc3RlcmVkU2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBOzs7O0dBSUc7QUFDSDtJQTZDSSxZQUFZLE9BQXNCLEVBQUUsT0FBd0I7UUFoQnBELGVBQVUsR0FBWSxLQUFLLENBQUM7UUFpQmhDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixHQUFHLE9BQU8sQ0FBQztRQUV4QyxjQUFjO1FBQ2QsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLEVBQUUsR0FBVTtZQUNsQyxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRTlDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ1osS0FBSyxLQUFLO29CQUNOLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztvQkFDbkMsS0FBSyxDQUFDO2dCQUNWLEtBQUssSUFBSTtvQkFDTCxLQUFLLENBQUM7Z0JBQ1YsS0FBSyxNQUFNO29CQUNQLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztvQkFDbkMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDaEIsS0FBSyxDQUFDO2dCQUNWO29CQUNJLEVBQUUsQ0FBQyxDQUFDLEtBQUssWUFBWSxLQUFLLENBQUM7d0JBQ3ZCLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztvQkFDekMsS0FBSyxDQUFDO1lBQ2QsQ0FBQztRQUNMLENBQUMsQ0FBQztJQUNOLENBQUM7SUE3REQ7Ozs7T0FJRztJQUNILElBQVcsU0FBUztRQUNoQixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBVyxTQUFTLENBQUMsQ0FBVTtRQUMzQixrQkFBa0I7UUFDbEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2pELENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDN0QsQ0FBQztRQUVELElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCLENBQUM7Q0EyQ0o7QUF2RUQsOENBdUVDIiwiZmlsZSI6IlNlcnZpY2VzTWFuYWdlci9SZWdpc3RlcmVkU2VydmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlcnZpY2VNb2R1bGUgfSBmcm9tIFwiLi4vU2VydmljZU1vZHVsZS9TZXJ2aWNlTW9kdWxlXCI7XG5pbXBvcnQgeyBTZXJ2aWNlc01hbmFnZXIgfSBmcm9tIFwiLi9TZXJ2aWNlc01hbmFnZXJcIjtcblxuLyoqXG4gKiDkv53lrZjms6jlhozkuobnmoTmnI3liqHjgILkvptTZXJ2aWNlc01hbmFnZXLkvb/nlKhcbiAqIFxuICogQGNsYXNzIFJlZ2lzdGVyZWRTZXJ2aWNlXG4gKi9cbmV4cG9ydCBjbGFzcyBSZWdpc3RlcmVkU2VydmljZSB7XG5cbiAgICAvKipcbiAgICAgKiDmnI3liqHlrp7kvotcbiAgICAgKiBcbiAgICAgKiBAdHlwZSB7U2VydmljZU1vZHVsZX1cbiAgICAgKi9cbiAgICByZWFkb25seSBzZXJ2aWNlOiBTZXJ2aWNlTW9kdWxlO1xuXG4gICAgLyoqXG4gICAgICog5pyN5Yqh5piv5ZCm5bey5ZCv5YqoXG4gICAgICogXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgcHVibGljIGdldCBpc1N0YXJ0ZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc1N0YXJ0ZWQ7XG4gICAgfVxuICAgIHB1YmxpYyBzZXQgaXNTdGFydGVkKHY6IGJvb2xlYW4pIHtcbiAgICAgICAgLy8g5qC55o2u5piv5ZCm5ZCv5Yqo77yM5rOo5YaM5ZKM56e76Zmk55uR5ZCs5ZmoXG4gICAgICAgIGlmICh2ICYmIHRoaXMuX2lzU3RhcnRlZCA9PT0gZmFsc2UpIHsgICAvL+ehruS/neS4jeS8mumHjeWkjeazqOWGjFxuICAgICAgICAgICAgdGhpcy5zZXJ2aWNlLm9uKCdlcnJvcicsIHRoaXMuZXJyb3JMaXN0ZW5lcik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodiA9PT0gZmFsc2UgJiYgdGhpcy5faXNTdGFydGVkKSB7XG4gICAgICAgICAgICB0aGlzLnNlcnZpY2UucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgdGhpcy5lcnJvckxpc3RlbmVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2lzU3RhcnRlZCA9IHY7XG4gICAgfVxuICAgIHByaXZhdGUgX2lzU3RhcnRlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICog5pyN5Yqh55qE5ZCN56ew44CC77yI6L+Z6YeM5YaN5L+d5a2Y5LiA5qyh5pyN5Yqh55qE5ZCN56ew5piv5Zug5Li65LiN5YWB6K645pyN5Yqh5ZCN56ew5Zyo6L+Q6KGM6L+H56iL5Lit6KKr5pS55Y+Y77yJXG4gICAgICogXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICByZWFkb25seSBuYW1lOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiDlsIbopoHnu5HlrprlnKjmnI3liqHkuIrnmoTplJnor6/nm5HlkKzlmajjgIJcbiAgICAgKiBcbiAgICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAgICovXG4gICAgcmVhZG9ubHkgZXJyb3JMaXN0ZW5lcjogRnVuY3Rpb247XG5cbiAgICBjb25zdHJ1Y3RvcihzZXJ2aWNlOiBTZXJ2aWNlTW9kdWxlLCBtYW5hZ2VyOiBTZXJ2aWNlc01hbmFnZXIpIHtcbiAgICAgICAgdGhpcy5zZXJ2aWNlID0gc2VydmljZTtcbiAgICAgICAgdGhpcy5uYW1lID0gc2VydmljZS5uYW1lO1xuICAgICAgICB0aGlzLnNlcnZpY2UuX3NlcnZpY2VzTWFuYWdlciA9IG1hbmFnZXI7XG5cbiAgICAgICAgLy/liJvlu7rmnI3liqHov5DooYzml7bplJnor6/nm5HlkKzlmahcbiAgICAgICAgdGhpcy5lcnJvckxpc3RlbmVyID0gYXN5bmMgKGVycjogRXJyb3IpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gYXdhaXQgdGhpcy5zZXJ2aWNlLm9uRXJyb3IoZXJyKTtcblxuICAgICAgICAgICAgc3dpdGNoICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgZmFsc2U6XG4gICAgICAgICAgICAgICAgICAgIG1hbmFnZXIub25FcnJvcihlcnIsIHRoaXMuc2VydmljZSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgdHJ1ZTpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnc3RvcCc6XG4gICAgICAgICAgICAgICAgICAgIG1hbmFnZXIub25FcnJvcihlcnIsIHRoaXMuc2VydmljZSk7XG4gICAgICAgICAgICAgICAgICAgIG1hbmFnZXIuc3RvcCgyKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRXJyb3IpXG4gICAgICAgICAgICAgICAgICAgICAgICBtYW5hZ2VyLm9uRXJyb3IodmFsdWUsIHRoaXMuc2VydmljZSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbn0iXX0=
